/**
 * generated by Xtext 2.19.0
 */
package de.tubs.isf.guido.dsl.dsl.impl;

import de.tubs.isf.guido.dsl.dsl.Constructs;
import de.tubs.isf.guido.dsl.dsl.Definition;
import de.tubs.isf.guido.dsl.dsl.Description;
import de.tubs.isf.guido.dsl.dsl.DslPackage;
import de.tubs.isf.guido.dsl.dsl.Hypothesis;
import de.tubs.isf.guido.dsl.dsl.Parameter;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Hypothesis</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.tubs.isf.guido.dsl.dsl.impl.HypothesisImpl#getName <em>Name</em>}</li>
 *   <li>{@link de.tubs.isf.guido.dsl.dsl.impl.HypothesisImpl#getType <em>Type</em>}</li>
 *   <li>{@link de.tubs.isf.guido.dsl.dsl.impl.HypothesisImpl#getTypes <em>Types</em>}</li>
 *   <li>{@link de.tubs.isf.guido.dsl.dsl.impl.HypothesisImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link de.tubs.isf.guido.dsl.dsl.impl.HypothesisImpl#getDefinition <em>Definition</em>}</li>
 *   <li>{@link de.tubs.isf.guido.dsl.dsl.impl.HypothesisImpl#getConstructs <em>Constructs</em>}</li>
 * </ul>
 *
 * @generated
 */
public class HypothesisImpl extends TypeImpl implements Hypothesis
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected Parameter type;

  /**
   * The cached value of the '{@link #getTypes() <em>Types</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypes()
   * @generated
   * @ordered
   */
  protected Parameter types;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected Description description;

  /**
   * The cached value of the '{@link #getDefinition() <em>Definition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefinition()
   * @generated
   * @ordered
   */
  protected Definition definition;

  /**
   * The cached value of the '{@link #getConstructs() <em>Constructs</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstructs()
   * @generated
   * @ordered
   */
  protected Constructs constructs;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected HypothesisImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.Literals.HYPOTHESIS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.HYPOTHESIS__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Parameter getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetType(Parameter newType, NotificationChain msgs)
  {
    Parameter oldType = type;
    type = newType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.HYPOTHESIS__TYPE, oldType, newType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(Parameter newType)
  {
    if (newType != type)
    {
      NotificationChain msgs = null;
      if (type != null)
        msgs = ((InternalEObject)type).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.HYPOTHESIS__TYPE, null, msgs);
      if (newType != null)
        msgs = ((InternalEObject)newType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.HYPOTHESIS__TYPE, null, msgs);
      msgs = basicSetType(newType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.HYPOTHESIS__TYPE, newType, newType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Parameter getTypes()
  {
    return types;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTypes(Parameter newTypes, NotificationChain msgs)
  {
    Parameter oldTypes = types;
    types = newTypes;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.HYPOTHESIS__TYPES, oldTypes, newTypes);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTypes(Parameter newTypes)
  {
    if (newTypes != types)
    {
      NotificationChain msgs = null;
      if (types != null)
        msgs = ((InternalEObject)types).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.HYPOTHESIS__TYPES, null, msgs);
      if (newTypes != null)
        msgs = ((InternalEObject)newTypes).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.HYPOTHESIS__TYPES, null, msgs);
      msgs = basicSetTypes(newTypes, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.HYPOTHESIS__TYPES, newTypes, newTypes));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Description getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDescription(Description newDescription, NotificationChain msgs)
  {
    Description oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.HYPOTHESIS__DESCRIPTION, oldDescription, newDescription);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(Description newDescription)
  {
    if (newDescription != description)
    {
      NotificationChain msgs = null;
      if (description != null)
        msgs = ((InternalEObject)description).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.HYPOTHESIS__DESCRIPTION, null, msgs);
      if (newDescription != null)
        msgs = ((InternalEObject)newDescription).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.HYPOTHESIS__DESCRIPTION, null, msgs);
      msgs = basicSetDescription(newDescription, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.HYPOTHESIS__DESCRIPTION, newDescription, newDescription));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Definition getDefinition()
  {
    return definition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDefinition(Definition newDefinition, NotificationChain msgs)
  {
    Definition oldDefinition = definition;
    definition = newDefinition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.HYPOTHESIS__DEFINITION, oldDefinition, newDefinition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDefinition(Definition newDefinition)
  {
    if (newDefinition != definition)
    {
      NotificationChain msgs = null;
      if (definition != null)
        msgs = ((InternalEObject)definition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.HYPOTHESIS__DEFINITION, null, msgs);
      if (newDefinition != null)
        msgs = ((InternalEObject)newDefinition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.HYPOTHESIS__DEFINITION, null, msgs);
      msgs = basicSetDefinition(newDefinition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.HYPOTHESIS__DEFINITION, newDefinition, newDefinition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Constructs getConstructs()
  {
    return constructs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConstructs(Constructs newConstructs, NotificationChain msgs)
  {
    Constructs oldConstructs = constructs;
    constructs = newConstructs;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.HYPOTHESIS__CONSTRUCTS, oldConstructs, newConstructs);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConstructs(Constructs newConstructs)
  {
    if (newConstructs != constructs)
    {
      NotificationChain msgs = null;
      if (constructs != null)
        msgs = ((InternalEObject)constructs).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.HYPOTHESIS__CONSTRUCTS, null, msgs);
      if (newConstructs != null)
        msgs = ((InternalEObject)newConstructs).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.HYPOTHESIS__CONSTRUCTS, null, msgs);
      msgs = basicSetConstructs(newConstructs, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.HYPOTHESIS__CONSTRUCTS, newConstructs, newConstructs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DslPackage.HYPOTHESIS__TYPE:
        return basicSetType(null, msgs);
      case DslPackage.HYPOTHESIS__TYPES:
        return basicSetTypes(null, msgs);
      case DslPackage.HYPOTHESIS__DESCRIPTION:
        return basicSetDescription(null, msgs);
      case DslPackage.HYPOTHESIS__DEFINITION:
        return basicSetDefinition(null, msgs);
      case DslPackage.HYPOTHESIS__CONSTRUCTS:
        return basicSetConstructs(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.HYPOTHESIS__NAME:
        return getName();
      case DslPackage.HYPOTHESIS__TYPE:
        return getType();
      case DslPackage.HYPOTHESIS__TYPES:
        return getTypes();
      case DslPackage.HYPOTHESIS__DESCRIPTION:
        return getDescription();
      case DslPackage.HYPOTHESIS__DEFINITION:
        return getDefinition();
      case DslPackage.HYPOTHESIS__CONSTRUCTS:
        return getConstructs();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.HYPOTHESIS__NAME:
        setName((String)newValue);
        return;
      case DslPackage.HYPOTHESIS__TYPE:
        setType((Parameter)newValue);
        return;
      case DslPackage.HYPOTHESIS__TYPES:
        setTypes((Parameter)newValue);
        return;
      case DslPackage.HYPOTHESIS__DESCRIPTION:
        setDescription((Description)newValue);
        return;
      case DslPackage.HYPOTHESIS__DEFINITION:
        setDefinition((Definition)newValue);
        return;
      case DslPackage.HYPOTHESIS__CONSTRUCTS:
        setConstructs((Constructs)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.HYPOTHESIS__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DslPackage.HYPOTHESIS__TYPE:
        setType((Parameter)null);
        return;
      case DslPackage.HYPOTHESIS__TYPES:
        setTypes((Parameter)null);
        return;
      case DslPackage.HYPOTHESIS__DESCRIPTION:
        setDescription((Description)null);
        return;
      case DslPackage.HYPOTHESIS__DEFINITION:
        setDefinition((Definition)null);
        return;
      case DslPackage.HYPOTHESIS__CONSTRUCTS:
        setConstructs((Constructs)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.HYPOTHESIS__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case DslPackage.HYPOTHESIS__TYPE:
        return type != null;
      case DslPackage.HYPOTHESIS__TYPES:
        return types != null;
      case DslPackage.HYPOTHESIS__DESCRIPTION:
        return description != null;
      case DslPackage.HYPOTHESIS__DEFINITION:
        return definition != null;
      case DslPackage.HYPOTHESIS__CONSTRUCTS:
        return constructs != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //HypothesisImpl
